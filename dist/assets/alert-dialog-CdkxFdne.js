import{c as F,a as L,q as u,r as G,O as H,W,l as q,d as V,T as Y,o as B,m as A,k as J,p as K}from"./index-C-92eTuZ.js";import{r as s,j as o,a as D,S as Q,c as n,h as v}from"./index-CkkKPyuP.js";/**
 * @license lucide-react v0.358.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ve=F("Ellipsis",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]);var x="AlertDialog",[U,xe]=L(x,[u]),i=u(),y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(J,{...r,...t,modal:!0})};y.displayName=x;var X="AlertDialogTrigger",Z=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(G,{...l,...r,ref:a})});Z.displayName=X;var ee="AlertDialogPortal",N=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(K,{...r,...t})};N.displayName=ee;var ae="AlertDialogOverlay",R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(H,{...l,...r,ref:a})});R.displayName=ae;var c="AlertDialogContent",[te,oe]=U(c),j=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),z=D(a,p),f=s.useRef(null);return o.jsx(W,{contentName:c,titleName:_,docsSlug:"alert-dialog",children:o.jsx(te,{scope:t,cancelRef:f,children:o.jsxs(q,{role:"alertdialog",...g,...l,ref:z,onOpenAutoFocus:V(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(Q,{children:r}),o.jsx(se,{contentRef:p})]})})})});j.displayName=c;var _="AlertDialogTitle",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Y,{...l,...r,ref:a})});E.displayName=_;var h="AlertDialogDescription",w=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(B,{...l,...r,ref:a})});w.displayName=h;var re="AlertDialogAction",b=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(A,{...l,...r,ref:a})});b.displayName=re;var C="AlertDialogCancel",S=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=oe(C,t),g=i(t),p=D(a,l);return o.jsx(A,{...g,...r,ref:p})});S.displayName=C;var se=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${h}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},le=y,ie=N,P=R,T=j,O=b,$=S,M=E,I=w;const ye=le,ne=ie,k=s.forwardRef(({className:e,...a},t)=>o.jsx(P,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));k.displayName=P.displayName;const ce=s.forwardRef(({className:e,...a},t)=>o.jsxs(ne,{children:[o.jsx(k,{}),o.jsx(T,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));ce.displayName=T.displayName;const de=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});de.displayName="AlertDialogHeader";const pe=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});pe.displayName="AlertDialogFooter";const ge=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:n("text-lg font-semibold",e),...a}));ge.displayName=M.displayName;const fe=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));fe.displayName=I.displayName;const me=s.forwardRef(({className:e,...a},t)=>o.jsx(O,{ref:t,className:n(v(),e),...a}));me.displayName=O.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n(v({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));ue.displayName=$.displayName;export{ye as A,ve as E,ce as a,de as b,ge as c,fe as d,pe as e,ue as f,me as g};
